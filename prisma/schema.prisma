generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Survey {
  id                String             @id @default(cuid())
  vendor            String
  year              String
  columnMappings    Json
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  mappingProgress   Int                @default(0)
  status            String             @default("PROCESSING")
  uploadDate        DateTime           @default(now())
  specialtyMappings SpecialtyMapping[]
  data              SurveyData[]

  @@map("surveys")
}

model SurveyData {
  id           String   @id @default(cuid())
  surveyId     String
  specialty    String
  providerType String?
  region       String?
  nOrgs        Float?
  nIncumbents  Float?
  tccP25       Float?
  tccP50       Float?
  tccP75       Float?
  tccP90       Float?
  wrvuP25      Float?
  wrvuP50      Float?
  wrvuP75      Float?
  wrvuP90      Float?
  cfP25        Float?
  cfP50        Float?
  cfP75        Float?
  cfP90        Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  survey       Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)

  @@map("survey_data")
}

model SpecialtyMapping {
  id              String   @id @default(cuid())
  surveyId        String
  sourceSpecialty String
  mappedSpecialty String
  confidence      Float    @default(0)
  isVerified      Boolean  @default(false)
  notes           String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  survey          Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)

  @@map("specialty_mappings")
}

model SurveyTemplate {
  id        String   @id @default(cuid())
  name      String
  vendor    String
  year      String
  mapping   Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("survey_templates")
}
